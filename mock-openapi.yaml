openapi: 3.0.3
info:
  title: Project Management API
  description: API for managing projects, employees, and customers.
  version: 1.0.0

tags:
  - name: Project
    description: Endpoints for managing projects
  - name: Employee
    description: Endpoints for retrieving employees
  - name: Customer
    description: Endpoints for retrieving customers

paths:
  /projects:
    get:
      tags: [ Project ]
      summary: Get a list of projects
      description: Retrieve a paginated, sortable list of projects with filtering options.
      parameters:
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortByProject'
        - $ref: '#/components/parameters/sortOrder'
        - name: searchTerm
          in: query
          description: Search term for project name or customer name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
              examples:
                example1:
                  summary: Example response
                  value:
                    total: 2
                    projects:
                      - id: "1"
                        name: "Website Redesign"
                        budget: 50000
                        startDate: "2023-01-01"
                        industry: "IT"
                        contact:
                          id: "10"
                          firstName: "Alice"
                          lastName: "Smith"
                          position: "Project Manager"
                        customer:
                          id: "100"
                          companyName: "Tech Corp"
                          industry: "Software"
    post:
      tags: [ Project ]
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              examples:
                example1:
                  summary: Example response
                  value:
                    id: "2"
                    name: "Mobile App Development"
                    budget: 100000
                    startDate: "2023-06-01"
                    industry: "Finance"
                    contact:
                      id: "11"
                      firstName: "Bob"
                      lastName: "Johnson"
                      position: "Tech Lead"
                    customer:
                      id: "101"
                      companyName: "FinTech Inc."
                      industry: "Banking"

  /employees:
    get:
      tags: [ Employee ]
      summary: Get a list of employees
      parameters:
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/offset'
        - name: searchTerm
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeListResponse'
              examples:
                example1:
                  summary: Example response
                  value:
                    total: 2
                    employees:
                      - id: "10"
                        firstName: "Alice"
                        lastName: "Smith"
                        position: "Project Manager"
                      - id: "11"
                        firstName: "Bob"
                        lastName: "Johnson"
                        position: "Tech Lead"

  /customers:
    get:
      tags: [ Customer ]
      summary: Get a list of customers
      parameters:
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/offset'
        - name: searchTerm
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerListResponse'
              examples:
                example1:
                  summary: Example response
                  value:
                    total: 2
                    customers:
                      - id: "100"
                        companyName: "Tech Corp"
                        industry: "Software"
                      - id: "101"
                        companyName: "FinTech Inc."
                        industry: "Banking"

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    pageSize:
      name: pageSize
      in: query
      required: false
      schema:
        type: integer
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
    sortByProject:
      name: sortBy
      in: query
      required: false
      schema:
        type: string
        enum: [name, budget, startDate]
    sortOrder:
      name: sortOrder
      in: query
      required: false
      schema:
        type: string
        enum: [asc, desc]

  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        budget:
          type: number
        startDate:
          type: string
          format: date
        industry:
          type: string
        contact:
          $ref: '#/components/schemas/Employee'
        customer:
          $ref: '#/components/schemas/Customer'
      required:
        - name
        - budget
        - startDate
        - industry
        - contact
        - customer

    Employee:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        position:
          type: string
      required:
        - id
        - firstName
        - lastName
        - position

    Customer:
      type: object
      properties:
        id:
          type: string
        companyName:
          type: string
        industry:
          type: string
      required:
        - id
        - companyName
        - industry

    ProjectListResponse:
      type: object
      properties:
        total:
          type: integer
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'

    EmployeeListResponse:
      type: object
      properties:
        total:
          type: integer
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'

    CustomerListResponse:
      type: object
      properties:
        total:
          type: integer
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
